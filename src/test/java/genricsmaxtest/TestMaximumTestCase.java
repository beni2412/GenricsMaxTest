/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package genricsmaxtest;

import org.junit.Test;

import com.capg.testmax.TestMaximum;

import static org.junit.Assert.*;

import org.junit.Assert;

public class TestMaximumTestCase{
	@Test
	public void givenFirst_Greater_ShouldReturnFirstInteger() {
		TestMaximum test = new TestMaximum<Integer>(100,90,80);
		Integer result = (Integer) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenSecond_Greater_ShouldReturnSecondInteger() {
		TestMaximum test = new TestMaximum<Integer>(90,100,80);
		Integer result = (Integer) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenThird_Greater_ShouldReturnThirdInteger() {
		TestMaximum test = new TestMaximum<Integer>(80,90,100);
		Integer result = (Integer) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenFirst_Greater_ShouldReturnFirstFloat() {
		TestMaximum test = new TestMaximum<Float>(100f,90f,80f);
		Float result = (Float) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100f) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenSecond_Greater_ShouldReturnSecondFloat() {
		TestMaximum test = new TestMaximum<Float>(90f,100f,80f);
		Float result = (Float) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100f) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenThird_Greater_ShouldReturnThirdFloat() {
		TestMaximum test = new TestMaximum<Float>(80f,90f,100f);
		Float result = (Float) test.maxOfThree();
		boolean finalResult=false; 
		if(result == 100f) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenFirst_Greater_ShouldReturnFirstString() {
		TestMaximum test = new TestMaximum<String>("peach", "banana", "apple");
		String result = (String) test.maxOfThree();
		boolean finalResult=false; 
		if(result.equalsIgnoreCase("peach")) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenSecond_Greater_ShouldReturnSecondString() {
		TestMaximum test = new TestMaximum<String>("banana", "peach", "apple");
		String result = (String) test.maxOfThree();
		boolean finalResult=false; 
		if(result.equalsIgnoreCase("peach")) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
	@Test
	public void givenThird_Greater_ShouldReturnThirdString() {
		TestMaximum test = new TestMaximum<String>("banana", "apple", "peach");
		String result = (String) test.maxOfThree();
		boolean finalResult=false; 
		if(result.equalsIgnoreCase("peach")) {
		finalResult = true;
		} 
		Assert.assertEquals(true, finalResult);;
	}
}
